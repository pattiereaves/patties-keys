/*
*
* Copyright (c) 2021 Darryl deHaan
* SPDX-License-Identifier: MIT
*
*/

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    chosen {
        zmk,matrix_transform = &default_transform;

        //zmk,matrix_transform = &five_column_transform;
    };
};

/ {
    behaviors {
        magic: magic {
            compatible = "zmk,behavior-hold-tap";
            label = "MAGIC";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
            hold-trigger-key-positions = <13 14 15 16 19 20 21 22>;
        };

        layer_tap: layer_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
            hold-trigger-key-positions = <38 39 37 40>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "QWERTY";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB             &kp Q                &kp W           &kp E              &kp R               &kp T                     &kp Y      &kp U                &kp I               &kp O           &kp P                    &kp BSPC
&magic LCTRL GRAVE  &magic LEFT_SHIFT A  &magic LCTRL S  &magic LEFT_ALT D  &magic LEFT_GUI F   &kp G                     &kp H      &magic RIGHT_GUI J   &magic RIGHT_ALT K  &magic RCTRL L  &magic RIGHT_SHIFT SEMI  &kp SQT
&kp LSHFT           &kp Z                &kp X           &kp C              &kp V               &kp B                     &kp N      &kp M                &kp COMMA           &kp DOT         &kp FSLH                 &kp ESC
                                                         &kp LGUI           &layer_tap 1 SPACE  &layer_tap 3 BACKSPACE    &kp MINUS  &layer_tap 2 RETURN  &magic RALT RG(Z)
            >;
        };

        lower_layer {
            label = "NUMBER";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp N1  &kp N2  &kp N3             &kp N4            &kp N5        &kp N6     &kp N7        &kp N8        &kp N9        &kp N0            &kp BSPC
&trans     &trans  &trans  &kp C_VOL_UP       &kp C_PREV        &kp C_NEXT    &kp PG_UP  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp LEFT_BRACKET  &kp RIGHT_BRACKET
&kp LSHFT  &trans  &trans  &kp C_VOLUME_DOWN  &kp C_PLAY_PAUSE  &kp C_MUTE    &kp PG_DN  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans            &trans
                           &kp LGUI           &trans            &kp SPACE     &kp RET    &trans        &kp RALT
            >;
        };

        raise_layer {
            label = "SYMBOL";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp F1      &kp F2                          &kp F3                        &kp F4                    &kp F5                    &kp F6     &kp F7     &kp F8    &kp F9     &kp F10        &kp F11
&kp LCTRL  &bt BT_NXT  &trans                          &kp LG(Z)                     &kp LG(LA(LC(UP_ARROW)))  &kp LA(LC(LG(DOWN)))      &kp MINUS  &kp EQUAL  &kp F12   &kp LG(Z)  &kp BACKSLASH  &kp GRAVE
&kp LSHFT  &bt BT_CLR  &kp LS(LA(LC(LG(DOWN_ARROW))))  &kp LS(LG(LA(LC(UP_ARROW))))  &kp LC(LG(LA(COMMA)))     &kp LA(LC(LG(PERIOD)))    &kp RCTRL  &kp LEFT   &kp UP    &kp DOWN   &kp RIGHT      &kp LA(LC(LEFT_GUI))
                                                       &kp LGUI                      &trans                    &kp SPACE                 &kp RET    &trans     &kp RALT
            >;
        };

        layer_3 {
            bindings = <
&trans  &trans  &trans     &kp C_MUTE  &kp C_PLAY_PAUSE  &kp LS(LPAR)    &kp LS(RPAR)  &kp N7          &kp UP    &kp N9     &trans  &trans
&trans  &trans  &trans     &trans      &kp BSLH          &kp LS(LBRC)    &kp LS(RBRC)  &kp LEFT_ARROW  &kp DOWN  &kp RIGHT  &trans  &trans
&trans  &trans  &kp GRAVE  &trans      &trans            &kp LBKT        &kp RBKT      &kp N1          &kp N2    &kp N3     &trans  &trans
                           &trans      &trans            &trans          &trans        &trans          &trans
            >;
        };
    };
};
